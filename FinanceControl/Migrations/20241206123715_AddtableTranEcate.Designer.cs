// <auto-generated />
using System;
using FinanceControl.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceControl.Migrations
{
    [DbContext(typeof(Banco))]
    [Migration("20241206123715_AddtableTranEcate")]
    partial class AddtableTranEcate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanceControl.Entities.CategoryEntities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FinanceControl.Entities.TransactionEntities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryEntitiesId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryEntitiesId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("FinanceControl.Entities.UserEntities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransactionEntitiesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransactionEntitiesId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinanceControl.Entities.TransactionEntities", b =>
                {
                    b.HasOne("FinanceControl.Entities.CategoryEntities", "CategoryEntities")
                        .WithMany("Transaction")
                        .HasForeignKey("CategoryEntitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryEntities");
                });

            modelBuilder.Entity("FinanceControl.Entities.UserEntities", b =>
                {
                    b.HasOne("FinanceControl.Entities.TransactionEntities", null)
                        .WithMany("UserEntities")
                        .HasForeignKey("TransactionEntitiesId");
                });

            modelBuilder.Entity("FinanceControl.Entities.CategoryEntities", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("FinanceControl.Entities.TransactionEntities", b =>
                {
                    b.Navigation("UserEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
